version: '3'
services:
  tps-channeld:
    image: channeld/tps-channeld
    build: 
      context: ${CHANNELD_PATH}
      dockerfile: examples/channeld-ue-tps/Dockerfile
    volumes:
    - "./channeld:/var/log/channeld"
    depends_on:
      - grafana
    ports:
      - "12108:12108"
    expose:
      - "8080"
      - "11288"
    entrypoint: [
      "./channeld-ue-tps", 
      "-dev",
      "-mcb=13",
      "-cfsm=config/client_authoratative_fsm.json", 
      "-sfsm=config/server_authoratative_fsm.json",
      "-chs=config/channel_settings_ue.json",
      "-scc=config/spatial_static_benchmark.json",
      "-loglevel=0",
      "-logfile=/var/log/channeld/{time}.log",
      # "-profile=cpu", 
      # "-profilepath=/var/log/channeld", 
    ]
    deploy:
      resources:
        limits:
          cpus: "4.0"
          memory: 1024M
    profiles: ["server"]
  tps-server:
    image: channeld/tps-server
    build:
      context: ..
      dockerfile: Packages/Dockerfile-LinuxServer
    depends_on:
      - tps-channeld
    volumes:
      - ./tps-server:/LinuxServer/ChanneldIntegration/Saved
      # - tps-server-vol:/LinuxServer/ChanneldIntegration/Saved
    expose:
      - "8081"
    environment:
      - CHANNELD_ADDR=tps-channeld
    entrypoint: "./ChanneldIntegrationServer.sh /Game/Maps/TestReplication?MaxPlayers=128 -server -log -metrics MetricsName=MASTER channeldServerAddr=tps-channeld CHANNELDUEINI=/LinuxServer/ChanneldUE.ini ViewClass=ChanneldUE.SingleChannelDataView ENGINEINI=/LinuxServer/Engine.ini -FPS=30"
    deploy:
      replicas: 1
    profiles: ["server", "single"]
  tps-master:
    image: channeld/tps-server
    build:
      context: ..
      dockerfile: Packages/Dockerfile-LinuxServer
    depends_on:
      - tps-channeld
    volumes:
      - ./tps-master:/LinuxServer/ChanneldIntegration/Saved/Logs
      # - tps-server-vol:/LinuxServer/ChanneldIntegration/Saved
    expose:
      - "8081"
    environment:
      - CHANNELD_ADDR=tps-channeld
    entrypoint: "./ChanneldIntegrationServer.sh /Game/Maps/TestSpatial_Benchmark -server -log -metrics MetricsName=MASTER channeldServerAddr=tps-channeld CHANNELDUEINI=/LinuxServer/ChanneldUE.ini ViewClass=ChanneldUE.SpatialMasterServerView ENGINEINI=/LinuxServer/Engine.ini -FPS=30"
    profiles: ["server", "spatial"]
  tps-spatial:
    image: channeld/tps-server
    depends_on:
      - tps-master
    volumes:
      - ./tps-spatial:/LinuxServer/ChanneldIntegration/Saved/Logs
      # - tps-server-vol:/LinuxServer/ChanneldIntegration/Saved
    expose:
      - "8081"
    environment:
      - CHANNELD_ADDR=tps-channeld
    entrypoint: "./ChanneldIntegrationServer.sh /Game/Maps/TestSpatial_Benchmark?MaxPlayers=128 -server -log -metrics MetricsName=SPATIAL channeldServerAddr=tps-channeld CHANNELDUEINI=/LinuxServer/ChanneldUE.ini ViewClass=ChanneldUE.SpatialChannelDataView ENGINEINI=/LinuxServer/Engine.ini -FPS=30"
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1024M
      replicas: 9
    profiles: ["server", "spatial"]
  tps-client:
    image: channeld/tps-client
    build:
      context: ..
      dockerfile: Packages/Dockerfile-LinuxNoEditor
    volumes:
      - ./tps-client:/LinuxNoEditor/ChanneldIntegration/Saved
      # - tps-client-vol:LinuxNoEditor/ChanneldIntegration/Saved
    expose:
      - "8081"
    environment:
      - CHANNELD_ADDR=tps-channeld
    # entrypoint: "./ChanneldIntegration.sh 127.0.0.1 -log -metrics MetricsName=CLIENT channeldClientAddr=${CHANNELD_ADDR} EnableSpatialVisualizer=False CHANNELDUEINI=/LinuxNoEditor/ChanneldUE.ini ENGINEINI=/LinuxNoEditor/Engine.ini -nullrhi -FPS=30 -moving"
    # -UseFixedTimeStep
    deploy:
      resources:
        reservations:
          cpus: "0.16"
          memory: 256M
        limits:
          cpus: "0.32"
          memory: 512M
      replicas: 0
    restart: on-failure
  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    expose:
      - "3000"
    profiles: ["server"]
  prometheus:
    image: prom/prometheus
    entrypoint: /bin/sh -c
    command: |
      'sh -s <<EOF
        cat > ./prometheus.yml <<EON
      global:
        scrape_interval:     15s
        evaluation_interval: 15s
      scrape_configs:
        - job_name: channeld
          static_configs:
          - targets: ['tps-channeld:8080', 'tps-server:8081', 'tps-master:8081', 'tps-spatial:8081', 'tps-client:8081']
      EON
      prometheus --config.file=./prometheus.yml
      EOF'
    ports:
      - "9090:9090"
    profiles: ["server"]
volumes:
  tps-server-vol:
  tps-client-vol: